{"remainingRequest":"/Applications/web/vue-mpa/node_modules/babel-loader/lib/index.js!/Applications/web/vue-mpa/src/vuex/cloud_store.js","dependencies":[{"path":"/Applications/web/vue-mpa/src/vuex/cloud_store.js","mtime":1564800197483},{"path":"/Applications/web/vue-mpa/node_modules/cache-loader/dist/cjs.js","mtime":1561083984975},{"path":"/Applications/web/vue-mpa/node_modules/babel-loader/lib/index.js","mtime":1561083931133}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nvar state = {\n  //示例状态\n  oinfo: '',\n  equipList: '',\n  equip_info: {},\n  gate: [],\n  gate_string: '',\n  equip_info_string: '',\n  pro_type_name: '',\n  channels: {},\n  real_data: [],\n  real_data_string: '',\n  start_id: '',\n  auth_token: {},\n  patrolRow: {},\n  task_preview: {},\n  is_super: '',\n  isRead: false,\n  alarmVisible: false,\n  searchBoxVisile: false,\n  areaTreeVisile: false\n};\nvar getters = {\n  getInfo: function getInfo(state) {\n    return state.oinfo;\n  },\n  getEquipInfo: function getEquipInfo(state) {\n    return state.equip_info;\n  },\n  getGate: function getGate(state) {\n    return state.gate;\n  },\n  getGateString: function getGateString(state) {\n    return state.gate_string;\n  },\n  getEquipInfoString: function getEquipInfoString(state) {\n    return state.equip_info_string;\n  },\n  getEquipList: function getEquipList(state) {\n    return state.equipList;\n  },\n  getProTypeName: function getProTypeName(state) {\n    return state.pro_type_name;\n  },\n  getChannels: function getChannels(state) {\n    return state.channels;\n  },\n  getRealData: function getRealData(state) {\n    return state.real_data;\n  },\n  getRealDataString: function getRealDataString(state) {\n    return state.real_data_string;\n  },\n  getStartId: function getStartId(state) {\n    return state.start_id;\n  },\n  getAuthToken: function getAuthToken(state) {\n    return state.auth_token;\n  },\n  getPatrolRow: function getPatrolRow(state) {\n    return state.patrolRow;\n  },\n  getTaskPreview: function getTaskPreview(state) {\n    return state.task_preview;\n  },\n  getIsSuper: function getIsSuper(state) {\n    return state.is_super;\n  },\n  getIsRead: function getIsRead(state) {\n    return state.isRead;\n  },\n  getAlarmVisible: function getAlarmVisible(state) {\n    return state.alarmVisible;\n  },\n  getSearchBoxVisile: function getSearchBoxVisile(state) {\n    return state.searchBoxVisile;\n  },\n  getAreaTreeVisile: function getAreaTreeVisile(state) {\n    return state.areaTreeVisile;\n  }\n};\nvar actions = {};\nvar mutations = {\n  setInfo: function setInfo(state, data) {\n    state.oinfo = data;\n  },\n  setEquipInfo: function setEquipInfo(state, data) {\n    var isPush = true;\n    Object.keys(state.equip_info).forEach(function (item) {\n      if (data[item]) {\n        state.equip_info[item] = data[item];\n        isPush = false;\n      }\n    });\n    if (isPush) state.equip_info[Object.keys(data)[0]] = data[Object.keys(data)[0]];\n  },\n  setGate: function setGate(state, data) {\n    var isPush = true;\n    var isPushIds = true;\n\n    if (data.gate_id) {\n      //最外层数组元素\n      state.gate.forEach(function (item) {\n        if (item.gate_id === data.gate_id && item.gate_addr === data.gate_addr) isPush = false;\n      });\n      if (isPush) state.gate.push(data);\n    }\n\n    if (data.parent_id) {\n      state.gate.forEach(function (item) {\n        //循环gate\n        if (item.gate_id === data.parent_id) {\n          //判断当前网关id是否等于当前通道的父级id\n          item.equip_ids.forEach(function (child) {\n            //去重\n            if (child === data.id) isPushIds = false;\n          });\n          if (isPushIds) item.equip_ids.push(data.id);\n        }\n      });\n    }\n  },\n  setGateString: function setGateString(state, data) {\n    state.gate_string = data;\n  },\n  setEquipInfoString: function setEquipInfoString(state, data) {\n    state.equip_info_string = data;\n  },\n  setEquipList: function setEquipList(state, data) {\n    state.equipList = data;\n  },\n  setProTypeName: function setProTypeName(state, data) {\n    state.pro_type_name = data;\n  },\n  setChannels: function setChannels(state, data) {\n    state.channels[Object.keys(data)[0]] = data[Object.keys(data)[0]];\n  },\n  setRealData: function setRealData(state, data) {\n    state.real_data = data;\n  },\n  setRealDataString: function setRealDataString(state, data) {\n    state.real_data_string = data;\n  },\n  setStartId: function setStartId(state, data) {\n    state.start_id = data;\n  },\n  setAuthToken: function setAuthToken(state, data) {\n    state.auth_token = data;\n  },\n  setPatrolRow: function setPatrolRow(state, data) {\n    state.patrolRow = data;\n  },\n  setTaskPreview: function setTaskPreview(state, data) {\n    state.task_preview = data;\n  },\n  setIsSuper: function setIsSuper(state, data) {\n    state.is_super = data;\n  },\n  setIsRead: function setIsRead(state, data) {\n    state.isRead = data;\n  },\n  setAlarmVisible: function setAlarmVisible(state, data) {\n    state.alarmVisible = data;\n  },\n  setSearchBoxVisile: function setSearchBoxVisile(state, data) {\n    state.searchBoxVisile = data;\n  },\n  setAreaTreeVisile: function setAreaTreeVisile(state, data) {\n    state.areaTreeVisile = data;\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Applications/web/vue-mpa/src/vuex/cloud_store.js"],"names":["state","oinfo","equipList","equip_info","gate","gate_string","equip_info_string","pro_type_name","channels","real_data","real_data_string","start_id","auth_token","patrolRow","task_preview","is_super","isRead","alarmVisible","searchBoxVisile","areaTreeVisile","getters","getInfo","getEquipInfo","getGate","getGateString","getEquipInfoString","getEquipList","getProTypeName","getChannels","getRealData","getRealDataString","getStartId","getAuthToken","getPatrolRow","getTaskPreview","getIsSuper","getIsRead","getAlarmVisible","getSearchBoxVisile","getAreaTreeVisile","actions","mutations","setInfo","data","setEquipInfo","isPush","Object","keys","forEach","item","setGate","isPushIds","gate_id","gate_addr","push","parent_id","equip_ids","child","id","setGateString","setEquipInfoString","setEquipList","setProTypeName","setChannels","setRealData","setRealDataString","setStartId","setAuthToken","setPatrolRow","setTaskPreview","setIsSuper","setIsRead","setAlarmVisible","setSearchBoxVisile","setAreaTreeVisile"],"mappings":"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","sourcesContent":["var state = {\n    //示例状态\n    oinfo: '',\n    equipList:'',\n    equip_info:{},\n    gate:[],\n    gate_string:'',\n    equip_info_string:'',\n    pro_type_name:'',\n    channels:{},\n    real_data:[],\n    real_data_string:'',\n    start_id:'',\n    auth_token:{},\n    patrolRow:{},\n    task_preview:{},\n    is_super:'',\n    isRead:false,\n    alarmVisible:false,\n    searchBoxVisile:false,\n    areaTreeVisile:false\n};\n\n\nvar getters = {\n    getInfo(state){\n        return state.oinfo;\n    },\n    getEquipInfo(state){\n        return state.equip_info;\n    },\n    getGate(state){\n        return state.gate;\n    },\n    getGateString(state){\n        return state.gate_string;\n    },\n    getEquipInfoString(state){\n        return state.equip_info_string;\n    },\n    getEquipList(state){\n        return state.equipList;\n    },\n    getProTypeName(state){\n        return state.pro_type_name;\n    },\n    getChannels(state){\n        return state.channels;\n    },\n    getRealData(state){\n        return state.real_data;\n    },\n    getRealDataString(state){\n        return state.real_data_string;\n    },\n    getStartId(state){\n        return state.start_id;\n    },\n    getAuthToken(state){\n        return state.auth_token;\n    },\n    getPatrolRow(state){\n        return state.patrolRow;\n    },\n    getTaskPreview(state){\n        return state.task_preview;\n    },\n    getIsSuper(state){\n        return state.is_super;\n    },\n    getIsRead(state){\n        return state.isRead;\n    },\n    getAlarmVisible(state){\n        return state.alarmVisible;\n    },\n    getSearchBoxVisile(state){\n        return state.searchBoxVisile;\n    },\n    getAreaTreeVisile(state){\n        return state.areaTreeVisile;\n    }\n};\n\nvar actions = {};\n\nvar mutations = {\n    setInfo(state, data) {\n        state.oinfo = data;\n    },\n    setEquipInfo(state, data) {\n        let isPush = true;\n        Object.keys(state.equip_info).forEach((item) => {\n           if(data[item]){\n               state.equip_info[item] = data[item];\n               isPush = false;\n           }\n        });\n        if(isPush) state.equip_info[Object.keys(data)[0]] = data[Object.keys(data)[0]];\n    },\n    setGate(state, data) {\n        let isPush = true;\n        let isPushIds = true;\n        if(data.gate_id){    //最外层数组元素\n            state.gate.forEach((item) => {\n                if(item.gate_id === data.gate_id && item.gate_addr === data.gate_addr) isPush = false;\n            });\n            if(isPush) state.gate.push(data);\n        }\n\n        if(data.parent_id) {\n            state.gate.forEach((item) => {                //循环gate\n                if(item.gate_id === data.parent_id) {     //判断当前网关id是否等于当前通道的父级id\n                    item.equip_ids.forEach((child) => {     //去重\n                        if(child === data.id) isPushIds = false;\n                    });\n                    if(isPushIds) item.equip_ids.push(data.id);\n                }\n            });\n        }\n    },\n    setGateString(state, data) {\n        state.gate_string = data;\n    },\n    setEquipInfoString(state, data) {\n        state.equip_info_string = data;\n    },\n    setEquipList(state, data) {\n        state.equipList = data;\n    },\n    setProTypeName(state, data) {\n        state.pro_type_name = data;\n    },\n    setChannels(state, data) {\n        state.channels[Object.keys(data)[0]] = data[Object.keys(data)[0]];\n    },\n    setRealData(state, data) {\n        state.real_data = data;\n    },\n    setRealDataString(state, data) {\n        state.real_data_string = data;\n    },\n    setStartId(state, data) {\n        state.start_id = data;\n    },\n    setAuthToken(state, data) {\n        state.auth_token = data;\n    },\n    setPatrolRow(state, data) {\n        state.patrolRow = data;\n    },\n    setTaskPreview(state, data) {\n        state.task_preview = data;\n    },\n    setIsSuper(state, data){\n        state.is_super = data;\n    },\n    setIsRead(state, data){\n        state.isRead = data;\n    },\n    setAlarmVisible(state, data){\n        state.alarmVisible = data;\n    },\n    setSearchBoxVisile(state, data){\n        state.searchBoxVisile = data;\n    },\n    setAreaTreeVisile(state, data){\n        state.areaTreeVisile = data;\n    }\n};\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}"]}]}