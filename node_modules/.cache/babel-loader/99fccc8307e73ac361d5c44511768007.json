{"remainingRequest":"/Applications/web/vue-mpa/node_modules/babel-loader/lib/index.js!/Applications/web/vue-mpa/src/assets/js/common/base64.js","dependencies":[{"path":"/Applications/web/vue-mpa/src/assets/js/common/base64.js","mtime":1550736093970},{"path":"/Applications/web/vue-mpa/node_modules/cache-loader/dist/cjs.js","mtime":1561083984975},{"path":"/Applications/web/vue-mpa/node_modules/babel-loader/lib/index.js","mtime":1561083931133}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n\nfunction Base64() {\n  // private property\n  var _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"; // private method for UTF-8 encoding\n\n  var _utf8_encode = function _utf8_encode(string) {\n    string = string.replace(/\\r\\n/g, \"\\n\");\n    var utftext = \"\";\n\n    for (var n = 0; n < string.length; n++) {\n      var c = string.charCodeAt(n);\n\n      if (c < 128) {\n        utftext += String.fromCharCode(c);\n      } else if (c > 127 && c < 2048) {\n        utftext += String.fromCharCode(c >> 6 | 192);\n        utftext += String.fromCharCode(c & 63 | 128);\n      } else {\n        utftext += String.fromCharCode(c >> 12 | 224);\n        utftext += String.fromCharCode(c >> 6 & 63 | 128);\n        utftext += String.fromCharCode(c & 63 | 128);\n      }\n    }\n\n    return utftext;\n  }; // private method for UTF-8 decoding\n\n\n  var _utf8_decode = function _utf8_decode(utftext) {\n    var string = \"\";\n    var i = 0;\n    var c1;\n    var c2;\n    var c3;\n    var c = c1 = c2 = 0;\n\n    while (i < utftext.length) {\n      c = utftext.charCodeAt(i);\n\n      if (c < 128) {\n        string += String.fromCharCode(c);\n        i++;\n      } else if (c > 191 && c < 224) {\n        c2 = utftext.charCodeAt(i + 1);\n        string += String.fromCharCode((c & 31) << 6 | c2 & 63);\n        i += 2;\n      } else {\n        c2 = utftext.charCodeAt(i + 1);\n        c3 = utftext.charCodeAt(i + 2);\n        string += String.fromCharCode((c & 15) << 12 | (c2 & 63) << 6 | c3 & 63);\n        i += 3;\n      }\n    }\n\n    return string;\n  }; // public method for encoding\n\n\n  this.encode = function (input) {\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n    input = _utf8_encode(input);\n\n    while (i < input.length) {\n      chr1 = input.charCodeAt(i++);\n      chr2 = input.charCodeAt(i++);\n      chr3 = input.charCodeAt(i++);\n      enc1 = chr1 >> 2;\n      enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n      enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n      enc4 = chr3 & 63;\n\n      if (isNaN(chr2)) {\n        enc3 = enc4 = 64;\n      } else if (isNaN(chr3)) {\n        enc4 = 64;\n      }\n\n      output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n    }\n\n    return output;\n  }; // public method for decoding\n\n\n  this.decode = function (input) {\n    var output = \"\";\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n    while (i < input.length) {\n      enc1 = _keyStr.indexOf(input.charAt(i++));\n      enc2 = _keyStr.indexOf(input.charAt(i++));\n      enc3 = _keyStr.indexOf(input.charAt(i++));\n      enc4 = _keyStr.indexOf(input.charAt(i++));\n      chr1 = enc1 << 2 | enc2 >> 4;\n      chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n      chr3 = (enc3 & 3) << 6 | enc4;\n      output = output + String.fromCharCode(chr1);\n\n      if (enc3 != 64) {\n        output = output + String.fromCharCode(chr2);\n      }\n\n      if (enc4 != 64) {\n        output = output + String.fromCharCode(chr3);\n      }\n    }\n\n    output = _utf8_decode(output);\n    return output;\n  };\n}\n\nvar base64 = new Base64();\nexport default base64;",{"version":3,"sources":["/Applications/web/vue-mpa/src/assets/js/common/base64.js"],"names":["Base64","_keyStr","_utf8_encode","string","replace","utftext","n","length","c","charCodeAt","String","fromCharCode","_utf8_decode","i","c1","c2","c3","encode","input","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","isNaN","charAt","decode","indexOf","base64"],"mappings":"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","sourcesContent":["function Base64() {\n\n    // private property\n    let _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    // private method for UTF-8 encoding\n   let _utf8_encode = function (string) {\n        string = string.replace(/\\r\\n/g,\"\\n\");\n        var utftext = \"\";\n        for (var n = 0; n < string.length; n++) {\n            var c = string.charCodeAt(n);\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n\n        }\n        return utftext;\n    }\n\n    // private method for UTF-8 decoding\n   let _utf8_decode = function (utftext) {\n        var string = \"\";\n        var i = 0;\n        var c1;\n        var c2;\n        var c3;\n        var c = c1 = c2 = 0;\n        while ( i < utftext.length ) {\n            c = utftext.charCodeAt(i);\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i+1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i+1);\n                c3 = utftext.charCodeAt(i+2);\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n                i += 3;\n            }\n        }\n        return string;\n    }\n    // public method for encoding\n    this.encode = function (input) {\n        var output = \"\";\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n        var i = 0;\n        input = _utf8_encode(input);\n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n            output = output +\n                _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +\n                _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n        }\n        return output;\n    }\n\n    // public method for decoding\n    this.decode = function (input) {\n        var output = \"\";\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n        while (i < input.length) {\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output = output + String.fromCharCode(chr1);\n            if (enc3 != 64) {\n                output = output + String.fromCharCode(chr2);\n            }\n            if (enc4 != 64) {\n                output = output + String.fromCharCode(chr3);\n            }\n        }\n        output = _utf8_decode(output);\n        return output;\n    }\n}\nconst base64 = new Base64();\nexport default base64"]}]}