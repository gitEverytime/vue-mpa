{"remainingRequest":"/Applications/web/vue-mpa/node_modules/babel-loader/lib/index.js!/Applications/web/vue-mpa/src/axios.js","dependencies":[{"path":"/Applications/web/vue-mpa/src/axios.js","mtime":1563786210566},{"path":"/Applications/web/vue-mpa/node_modules/cache-loader/dist/cjs.js","mtime":1561083984975},{"path":"/Applications/web/vue-mpa/node_modules/babel-loader/lib/index.js","mtime":1561083931133}],"contextDependencies":[],"result":["'use strict';\n\nimport axios from 'axios';\nimport qs from 'qs'; //qs组件来避开ajax信使请求，并兼容Android。\n\nimport Vue from 'vue'; // import router from './router'\n\nvar vm = new Vue({// router\n}); // console.log(router)\n\n/**\n * http请求拦截器\n */\n\naxios.interceptors.request.use(function (config) {\n  if (vm.cookie.get(\"xianyu_token\")) {\n    // 判断是否存在token，如果存在的话，则每个http请求的header都加上token,username\n    config.headers.Authorization = \"Token \".concat(vm.cookie.get(\"xianyu_token\"));\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  vm.$message.error(error);\n});\n\nfunction checkStatus(response) {\n  if (response && response.status === 200) {\n    return response; //拿到接口请求成功并且登录成功后的请求结果\n    // 如果不需要除了data之外的数据，可以直接 return response.data\n  } else {\n      return response; //网络错误，服务器错误，未登录成功\n    }\n}\n\nfunction checkCode(res) {\n  /**\n   * 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户\n   */\n  // vm.$message.error(\"亲，您的网络出了一点小状况喔!\");\n  if (!res) {\n    vm.$message.error(\"亲，您的网络出了一点小状况喔!\"); //接口请求不到报错\n  } else if (res.data.code !== 200) {\n    //接口异常错误\n    if (res.data.code === 404.666) {\n      //先判断是否处于登录状态\n      window.location.href = \"/after.html#/login\";\n    } else {\n      if (res.data.result === '暂无 /api/account/permission/info/ 接口的访问权限。') {\n        vm.$notify({\n          title: '警告',\n          message: '请联系管理员配置权限 ',\n          type: 'warning',\n          duration: '10000',\n          onClose: function onClose() {\n            window.location.href = \"/after.html#/login\";\n            this.$notify.close();\n            this.$message.close();\n          }\n        });\n      } else {\n        vm.$message.warning(res.data.result);\n      } //直接返回错误\n\n    }\n  } else {\n    return res;\n  }\n}\n\nexport default {\n  post: function post(url, data) {\n    return axios({\n      method: 'post',\n      baseURL: '/',\n      url: url,\n      data: qs.stringify(data),\n      timeout: 100000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      }\n    }).then(function (response) {\n      return checkStatus(response);\n    }).then(function (res) {\n      return checkCode(res);\n    });\n  },\n  get: function get(url, params) {\n    return axios({\n      method: 'get',\n      baseURL: '/',\n      url: url,\n      params: params,\n      // get 请求时带的参数\n      timeout: 100000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      }\n    }).then(function (response) {\n      return checkStatus(response);\n    }).then(function (res) {\n      return checkCode(res);\n    });\n  }\n};",{"version":3,"sources":["/Applications/web/vue-mpa/src/axios.js"],"names":["axios","qs","Vue","vm","interceptors","request","use","config","cookie","get","headers","Authorization","error","Promise","reject","response","$message","checkStatus","status","checkCode","res","data","code","window","location","href","result","$notify","title","message","type","duration","onClose","close","warning","post","url","method","baseURL","stringify","timeout","then","params"],"mappings":"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","sourcesContent":["'use strict';\n\nimport axios from 'axios'\nimport qs from 'qs'   //qs组件来避开ajax信使请求，并兼容Android。\nimport Vue from 'vue'\n\n// import router from './router'\nlet vm = new Vue({\n    // router\n});\n// console.log(router)\n/**\n * http请求拦截器\n */\naxios.interceptors.request.use(config => {\n  if (vm.cookie.get(\"xianyu_token\")) {  // 判断是否存在token，如果存在的话，则每个http请求的header都加上token,username\n      config.headers.Authorization = `Token ${vm.cookie.get(\"xianyu_token\")}`;\n  }\n  return config\n}, error => {\n  return Promise.reject(error)\n});\n\naxios.interceptors.response.use(response => {\n  return response\n}, error => {\n   vm.$message.error(error);\n});\n\nfunction checkStatus (response) {\n  if (response && (response.status === 200)) {\n    return response   //拿到接口请求成功并且登录成功后的请求结果\n    // 如果不需要除了data之外的数据，可以直接 return response.data\n  }else{\n    return response   //网络错误，服务器错误，未登录成功\n  }\n}\n\nfunction checkCode (res) {\n    /**\n     * 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户\n     */\n    // vm.$message.error(\"亲，您的网络出了一点小状况喔!\");\n  if(!res){\n      vm.$message.error(\"亲，您的网络出了一点小状况喔!\");                //接口请求不到报错\n\n  }else if(res.data.code !== 200){                                 //接口异常错误\n      if(res.data.code === 404.666){               //先判断是否处于登录状态\n          window.location.href=\"/after.html#/login\";\n\n      }else{\n          if(res.data.result === '暂无 /api/account/permission/info/ 接口的访问权限。'){\n              vm.$notify({\n                  title: '警告',\n                  message: '请联系管理员配置权限 ',\n                  type: 'warning',\n                  duration:'10000',\n                  onClose(){\n                      window.location.href=\"/after.html#/login\";\n                      this.$notify.close();\n                      this.$message.close();\n                  }\n              });\n          }else{\n              vm.$message.warning(res.data.result);\n          }\n          //直接返回错误\n\n      }\n  }else{\n      return res\n  }\n}\n\nexport default {\n  post (url, data) {\n    return axios({\n      method: 'post',\n      baseURL: '/',\n      url,\n      data: qs.stringify(data),\n      timeout: 100000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      }\n    }).then(\n      (response) => {\n        return checkStatus(response)\n      }\n    ).then(\n      (res) => {\n        return checkCode(res)\n      }\n    )\n  },\n  get (url, params) {\n    return axios({\n      method: 'get',\n      baseURL: '/',\n      url,\n      params, // get 请求时带的参数\n      timeout: 100000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      }\n    }).then(\n      (response) => {\n        return checkStatus(response)\n      }\n    ).then(\n      (res) => {\n        return checkCode(res)\n      }\n    )\n  },\n\n}\n"]}]}