{"remainingRequest":"/Applications/lg_web/yupuhu/node_modules/thread-loader/dist/cjs.js!/Applications/lg_web/yupuhu/node_modules/babel-loader/lib/index.js!/Applications/lg_web/yupuhu/src/vuex/cloud_store.js","dependencies":[{"path":"/Applications/lg_web/yupuhu/src/vuex/cloud_store.js","mtime":1564800197483},{"path":"/Applications/lg_web/yupuhu/node_modules/cache-loader/dist/cjs.js","mtime":1561083984975},{"path":"/Applications/lg_web/yupuhu/node_modules/thread-loader/dist/cjs.js","mtime":1561083989993},{"path":"/Applications/lg_web/yupuhu/node_modules/babel-loader/lib/index.js","mtime":1561083931133}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nvar state = {\n  //示例状态\n  oinfo: '',\n  equipList: '',\n  equip_info: {},\n  gate: [],\n  gate_string: '',\n  equip_info_string: '',\n  pro_type_name: '',\n  channels: {},\n  real_data: [],\n  real_data_string: '',\n  start_id: '',\n  auth_token: {},\n  patrolRow: {},\n  task_preview: {},\n  is_super: '',\n  isRead: false,\n  alarmVisible: false,\n  searchBoxVisile: false,\n  areaTreeVisile: false\n};\nvar getters = {\n  getInfo: function getInfo(state) {\n    return state.oinfo;\n  },\n  getEquipInfo: function getEquipInfo(state) {\n    return state.equip_info;\n  },\n  getGate: function getGate(state) {\n    return state.gate;\n  },\n  getGateString: function getGateString(state) {\n    return state.gate_string;\n  },\n  getEquipInfoString: function getEquipInfoString(state) {\n    return state.equip_info_string;\n  },\n  getEquipList: function getEquipList(state) {\n    return state.equipList;\n  },\n  getProTypeName: function getProTypeName(state) {\n    return state.pro_type_name;\n  },\n  getChannels: function getChannels(state) {\n    return state.channels;\n  },\n  getRealData: function getRealData(state) {\n    return state.real_data;\n  },\n  getRealDataString: function getRealDataString(state) {\n    return state.real_data_string;\n  },\n  getStartId: function getStartId(state) {\n    return state.start_id;\n  },\n  getAuthToken: function getAuthToken(state) {\n    return state.auth_token;\n  },\n  getPatrolRow: function getPatrolRow(state) {\n    return state.patrolRow;\n  },\n  getTaskPreview: function getTaskPreview(state) {\n    return state.task_preview;\n  },\n  getIsSuper: function getIsSuper(state) {\n    return state.is_super;\n  },\n  getIsRead: function getIsRead(state) {\n    return state.isRead;\n  },\n  getAlarmVisible: function getAlarmVisible(state) {\n    return state.alarmVisible;\n  },\n  getSearchBoxVisile: function getSearchBoxVisile(state) {\n    return state.searchBoxVisile;\n  },\n  getAreaTreeVisile: function getAreaTreeVisile(state) {\n    return state.areaTreeVisile;\n  }\n};\nvar actions = {};\nvar mutations = {\n  setInfo: function setInfo(state, data) {\n    state.oinfo = data;\n  },\n  setEquipInfo: function setEquipInfo(state, data) {\n    var isPush = true;\n    Object.keys(state.equip_info).forEach(function (item) {\n      if (data[item]) {\n        state.equip_info[item] = data[item];\n        isPush = false;\n      }\n    });\n    if (isPush) state.equip_info[Object.keys(data)[0]] = data[Object.keys(data)[0]];\n  },\n  setGate: function setGate(state, data) {\n    var isPush = true;\n    var isPushIds = true;\n\n    if (data.gate_id) {\n      //最外层数组元素\n      state.gate.forEach(function (item) {\n        if (item.gate_id === data.gate_id && item.gate_addr === data.gate_addr) isPush = false;\n      });\n      if (isPush) state.gate.push(data);\n    }\n\n    if (data.parent_id) {\n      state.gate.forEach(function (item) {\n        //循环gate\n        if (item.gate_id === data.parent_id) {\n          //判断当前网关id是否等于当前通道的父级id\n          item.equip_ids.forEach(function (child) {\n            //去重\n            if (child === data.id) isPushIds = false;\n          });\n          if (isPushIds) item.equip_ids.push(data.id);\n        }\n      });\n    }\n  },\n  setGateString: function setGateString(state, data) {\n    state.gate_string = data;\n  },\n  setEquipInfoString: function setEquipInfoString(state, data) {\n    state.equip_info_string = data;\n  },\n  setEquipList: function setEquipList(state, data) {\n    state.equipList = data;\n  },\n  setProTypeName: function setProTypeName(state, data) {\n    state.pro_type_name = data;\n  },\n  setChannels: function setChannels(state, data) {\n    state.channels[Object.keys(data)[0]] = data[Object.keys(data)[0]];\n  },\n  setRealData: function setRealData(state, data) {\n    state.real_data = data;\n  },\n  setRealDataString: function setRealDataString(state, data) {\n    state.real_data_string = data;\n  },\n  setStartId: function setStartId(state, data) {\n    state.start_id = data;\n  },\n  setAuthToken: function setAuthToken(state, data) {\n    state.auth_token = data;\n  },\n  setPatrolRow: function setPatrolRow(state, data) {\n    state.patrolRow = data;\n  },\n  setTaskPreview: function setTaskPreview(state, data) {\n    state.task_preview = data;\n  },\n  setIsSuper: function setIsSuper(state, data) {\n    state.is_super = data;\n  },\n  setIsRead: function setIsRead(state, data) {\n    state.isRead = data;\n  },\n  setAlarmVisible: function setAlarmVisible(state, data) {\n    state.alarmVisible = data;\n  },\n  setSearchBoxVisile: function setSearchBoxVisile(state, data) {\n    state.searchBoxVisile = data;\n  },\n  setAreaTreeVisile: function setAreaTreeVisile(state, data) {\n    state.areaTreeVisile = data;\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",null]}