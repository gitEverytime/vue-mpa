{"remainingRequest":"/Applications/lg_web/mpa/node_modules/thread-loader/dist/cjs.js!/Applications/lg_web/mpa/node_modules/babel-loader/lib/index.js!/Applications/lg_web/mpa/src/entries/mobile/axios.js","dependencies":[{"path":"/Applications/lg_web/mpa/src/entries/mobile/axios.js","mtime":1563847744239},{"path":"/Applications/lg_web/mpa/node_modules/cache-loader/dist/cjs.js","mtime":1561083984975},{"path":"/Applications/lg_web/mpa/node_modules/thread-loader/dist/cjs.js","mtime":1561083989993},{"path":"/Applications/lg_web/mpa/node_modules/babel-loader/lib/index.js","mtime":1561083931133}],"contextDependencies":[],"result":["'use strict';\n\nimport axios from 'axios';\nimport qs from 'qs'; //qs组件来避开ajax信使请求，并兼容Android。\n\nimport Vue from 'vue';\nimport cookie from \"../../assets/js/common/cookie.js\";\nimport { AlertPlugin } from 'vux';\nVue.use(AlertPlugin);\nvar vm = new Vue({// router\n}); // console.log(router)\n\n/**\n * http请求拦截器\n */\n\naxios.interceptors.request.use(function (config) {\n  if (vm.cookie.get(\"xianyu_token\")) {\n    // 判断是否存在token，如果存在的话，则每个http请求的header都加上token,username\n    config.headers.Authorization = \"Token \".concat(vm.cookie.get(\"xianyu_token\"));\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  vm.$vux.alert.show({\n    title: '网络错误',\n    content: error,\n    onHide: function onHide() {\n      location.reload();\n    }\n  });\n});\n\nfunction checkStatus(response) {\n  if (response && response.status === 200) {\n    return response; //拿到接口请求成功并且登录成功后的请求结果\n    // 如果不需要除了data之外的数据，可以直接 return response.data\n  } else {\n      return response; //网络错误，服务器错误，未登录成功\n    }\n}\n\nfunction checkCode(res) {\n  /**\n   * 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户\n   */\n  if (!res) {\n    vm.$vux.alert.show({\n      title: '网络错误',\n      content: '亲，您的网络出了一点小状况喔,请点击确定重新加载页面！',\n      onHide: function onHide() {\n        location.reload();\n      }\n    });\n  } else if (res.data.code === 404.666) {\n    //先判断是否处于登录状态\n    cookie.delCookie('xianyu_token');\n    cookie.delCookie('is_super');\n    cookie.delCookie('nickname');\n    cookie.delCookie('username');\n    cookie.delCookie('sex');\n    cookie.delCookie('phone');\n    cookie.delCookie('email');\n    cookie.delCookie('organization_name');\n    cookie.delCookie('post_name');\n    cookie.delCookie('user_id');\n    cookie.delCookie('img_url');\n    document.querySelectorAll('.vux-loading').style.display = 'none';\n    window.location.href = \"/mobile.html#/login\";\n  } else {\n    return res;\n  }\n}\n\nexport default {\n  post: function post(url, data) {\n    return axios({\n      method: 'post',\n      baseURL: '/',\n      url: url,\n      data: qs.stringify(data),\n      timeout: 100000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      }\n    }).then(function (response) {\n      return checkStatus(response);\n    }).then(function (response) {\n      return checkCode(response);\n    });\n  },\n  get: function get(url, params) {\n    return axios({\n      method: 'get',\n      baseURL: '/',\n      url: url,\n      params: params,\n      // get 请求时带的参数\n      timeout: 100000,\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      }\n    }).then(function (response) {\n      return checkStatus(response);\n    }).then(function (response) {\n      return checkCode(response);\n    });\n  }\n};",null]}